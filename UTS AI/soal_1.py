# -*- coding: utf-8 -*-
"""Soal 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fcHYSJY7d11a6lkz56o5Zs9OjCC7FGim
"""

!pip install experta

!pip install --upgrade frozendict

from experta import *

class Diagnosis(KnowledgeEngine):

    def __init__(self):
        super().__init__()
        self.diagnosis_terjadi = False

    @Rule(Fact(bercak_hitam=False), Fact(daun_menguning=True), Fact(tanaman_layu=True))
    def busuk_akar(self):
        print("Sepertinya tanaman anda terkena penyakit Busuk Akar.")
        self.diagnosis_terjadi = True

    @Rule(Fact(daun_menguning=False), Fact(tanaman_layu=True), Fact(bercak_hitam=True))
    def karat_daun(self):
        print("Sepertinya tanaman anda terserang penyakit Karat Daun.")
        self.diagnosis_terjadi = True

    @Rule(Fact(daun_berlubang=False), Fact(tanaman_layu=True))
    def serangan_kumbang(self):
        print("Tanaman anda mungkin diserang oleh kumbang.")
        self.diagnosis_terjadi = True

    @Rule(Fact(bercak_hitam=False), Fact(tanaman_layu=True), Fact(daun_menguning=False))
    def busuk_bakteri(self):
        print("Tanaman anda kemungkinan besar terjangkit Busuk Bakteri.")
        self.diagnosis_terjadi = True

    @Rule(Fact(daun_menguning=False), Fact(tanaman_layu=True), Fact(bercak_hitam=False))
    def layu_fusarium(self):
        print("Tanaman anda kemungkinan besar mengalami Layu Fusarium.")
        self.diagnosis_terjadi = True

    @Rule(Fact(daun_menguning=True), Fact(tanaman_layu=True), Fact(daun_berlubang=True), Fact(bercak_hitam=True))
    def sehat(self):
        print("Tanaman anda sehat.")
        self.diagnosis_terjadi = True

    @Rule(AS.f << Fact(), salience=-10)
    def default_diagnosis(self):
        if not self.diagnosis_terjadi:
            print("Gejala yang terdeteksi tidak cocok dengan data yang ada. Silakan periksa kembali atau konsultasikan lebih lanjut.")

def get_input():
    """Helper function to get user input as boolean (yes/no)."""
    def ask_question(question):
        return input(question + " (yes/no): ").strip().lower() == "yes"

    return {
        "bercak_hitam": ask_question("Apakah tanaman anda memiliki bercak hitam?"),
        "daun_menguning": ask_question("Apakah daun tanaman anda tampak menguning?"),
        "daun_berlubang": ask_question("Apakah tanaman anda memiliki daun berlubang?"),
        "tanaman_layu": ask_question("Apakah tanaman anda layu?")
    }

if __name__ == "__main__":
    symptoms = get_input()
    engine = Diagnosis()
    engine.reset()

    engine.declare(
        Fact(
            bercak_hitam=symptoms["bercak_hitam"],
            daun_menguning=symptoms["daun_menguning"],
            daun_berlubang=symptoms["daun_berlubang"],
            tanaman_layu=symptoms["tanaman_layu"]
        )
    )

    engine.run()

"""1. Kasus:
Seorang Petani ingin sistem AI yang bisa membantu menentukan jenis penyakit tanaman berdasarkan gejala berikut:

1. Daun menguning
Terdapat bercak hitam
Daun berlubang
Tanaman layu

Jawaban:
1. IF - THEN RULES:
IF daun menguning THEN Busuk Akar
IF terdapat bercak hitam THEN Karat Daun
IF daun berlubang THEN Serangan Kumbang
IF tanaman layu THEN Busuk Bakteri

2. Logika Proposisional:

P1: Daun menguning

P2: Terdapat bercak hitam

P3: Daun berlubang

P4: Tanaman layu

H1: Busuk Akar

H2: Karat Daun

H3: Serangan Kumbang

H4: Busuk Bakteri

Aturan proposisional:

P1 → H1
(Jika daun menguning, maka kemungkinan Busuk Akar)

P2 → H2
(Jika terdapat bercak hitam, maka kemungkinan Karat Daun)

P3 → H3
(Jika daun berlubang, maka kemungkinan Serangan Kumbang)

P4 → H4
(Jika tanaman layu, maka kemungkinan Busuk Bakteri)

Gabungan: 5. (P1 ∧ P2) → (H1 ∧ H2)
(Jika daun menguning dan terdapat bercak hitam, maka kemungkinan terjadi Busuk Akar dan Karat Daun)

(P4 ∧ ¬P1 ∧ ¬P2 ∧ ¬P3) → H4
(Jika tanaman layu, dan tidak ada daun menguning, tidak ada bercak hitam, dan tidak ada daun berlubang, maka kemungkinan besar Busuk Bakteri)

3. Penjelasan Sistem Inferensi:
Input: Data gejala dari tanaman (bercak hitam, daun menguning, daun berlubang, tanaman layu).
Inferensi: Sistem akan mengecek fakta dan aturan yang sudah dibuat menggunakan metode forward chaining (mencocokkan fakta secara maju).

Output: Menentukan diagnosis jenis penyakit tanaman berdasarkan gejala yang ditemukan.
"""